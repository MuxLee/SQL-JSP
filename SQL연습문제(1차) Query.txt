[과정평가형 산업기사 실기시험 대비 SQL 연습문제(90분)]

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[1-1] 아래의 테이블정의서와 샘플데이터를 참고하여 테이블을 생성하고 데이터를 인서트 하시오.
[학생정보테이블작성] 테이블정의서(테이블명 : student_tbl_004) & 샘플데이터

create table student_tbl_004 (
	st_no varchar2(5) not null primary key,
	st_major varchar2(30) not null,
	st_nm varchar2(10) not null,
	st_addr varchar2(50),
	st_phone varchar2(11),
	st_email varchar2(20),
	st_in_date date,
	st_out_date varchar2(30)
);
grant select, insert, update, delete on student_tbl_004 to system;

insert into student_tbl_004 values('30501', '유비쿼터스', '강신일', '서울시 송파구', '01011112222', 'ksi@sdhs.kr', '20170302', '');
insert into student_tbl_004 values('30502', '유비쿼터스', '김병철', '서울시 강남구', '01022223333', 'kbc@sdhs.kr', '20170302', '');
insert into student_tbl_004 values('30503', '유비쿼터스', '김지원', '서울시 송파구', '01033334444', 'kjw@sdhs.kr', '20170302', '');
insert into student_tbl_004 values('30504', '유비쿼터스', '박훈', '서울시 성동구', '01044445555', 'bh@sdhs.kr', '20170302', '');
insert into student_tbl_004 values('30505', '유비쿼터스', '송중기', '서울시 동작구', '01055556666', 'sjk@sdhs.kr', '20170302', '');
insert into student_tbl_004 values('30506', '유비쿼터스', '송혜교', '서울시 용산구', '01066667777', 'shk@sdhs.kr', '20170302', '');
insert into student_tbl_004 values('30507', '유비쿼터스', '진구', '서울시 광진구', '01077778888', 'jg@sdhs.kr', '20170302', '');

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[1-2][시험과목테이블] 테이블정의서(테이블명 : subject_tbl_004) & 샘플데이터

create table subject_tbl_004 (
	sbj_cd varchar2(8) not null primary key,
	sbj_nm varchar2(20),
	sbj_fg varchar2(2)
);
grant select, insert, update, delete on subject_tbl_004 to system;

insert into subject_tbl_004 values('A001', 'HTML', 'Y');
insert into subject_tbl_004 values('A002', 'JAVA', 'Y');
insert into subject_tbl_004 values('A003', 'PHP', 'Y');
insert into subject_tbl_004 values('A004', 'JAVASCRIPT', 'Y');
insert into subject_tbl_004 values('A005', 'CSS', 'Y');
insert into subject_tbl_004 values('B001', '국어', 'N');
insert into subject_tbl_004 values('B002', '영어', 'N');
insert into subject_tbl_004 values('B003', '수학', 'N');

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[1-3][시험성적테이블작성] 테이블정의서(테이블명 : exam_tbl_004) & 샘플데이터

create table exam_tbl_004 (
	exam_ymd varchar2(8) not null,
	exam_no varchar2(5) not null,
	exam_st_no varchar2(6) not null,
	exam_sbj_cd varchar2(8) not null,
	exam_point1 number(3),
	exam_point2 number(3),
	primary key(exam_ymd, exam_no),
	foreign key(exam_st_no) references student_tbl_004(st_no),
	foreign key(exam_sbj_cd) references subject_tbl_004(sbj_cd)
);
grant select, insert, update, delete on exam_tbl_004 to system;

insert into exam_tbl_004 values('20190412', '0001', '30501', 'A001', 80, 60);
insert into exam_tbl_004 values('20190412', '0002', '30502', 'A001', 70, 80);
insert into exam_tbl_004 values('20190412', '0003', '30503', 'A001', 90, 85);
insert into exam_tbl_004 values('20190412', '0004', '30504', 'A001', 100, 95);
insert into exam_tbl_004 values('20190412', '0005', '30505', 'A001', 65, 75);
insert into exam_tbl_004 values('20190412', '0006', '30506', 'A001', 50, 65);
insert into exam_tbl_004 values('20190412', '0007', '30507', 'A001', 80, 85);
insert into exam_tbl_004 values('20190412', '0008', '30501', 'B002', 70, 50);
insert into exam_tbl_004 values('20190412', '0009', '30502', 'B002', 70, 70);
insert into exam_tbl_004 values('20190412', '0010', '30503', 'B002', 80, 65);
insert into exam_tbl_004 values('20190412', '0011', '30504', 'B002', 80, 95);
insert into exam_tbl_004 values('20190412', '0012', '30505', 'B002', 65, 70);
insert into exam_tbl_004 values('20190412', '0013', '30506', 'B002', 55, 75);
insert into exam_tbl_004 values('20190412', '0014', '30507', 'B002', 80, 85);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[1-4][시험감독테이블작성] 테이블정의서(테이블명 : person_tbl_004)

create table person_tbl_004 (
	p_no varchar2(10),
	p_nm varchar2(10),
	p_age varchar2(10)
);
grant select, insert, update, delete on person_tbl_004 to system;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[2] 아래와 같은 시퀀스(sequence)를 두 개 생성하시오.
(시퀀스명 : student_number / 조건 : student_number의 초기값은 8, 채번은 1씩 증가.)
(시퀀스명 : exam_sample / 조건 : exam_sample의 초기값은 100, 채번은 1씩 증가.)

create sequence student_number
start with 8
minvalue 8
increment by 1
nocycle;

grant alter, select on student_number to system;

create sequence exam_sample
start with 100
minvalue 100
increment by 1
nocycle;

grant alter, select on exam_sample to system;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[2-1] 시퀀스(exam_sample)를 채번하는 쿼리를 작성하시오.

select exam_sample.nextval from dual;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[2-2] 시퀀스(exam_sample)의 현재값을 확인하는 쿼리를 작성하시오.

select exam_sample.currval from dual;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[3] 아래와 같이 오늘날짜를 출력하는 쿼리를 작성하시오

select to_char(sysdate, 'yyyy-MM-dd') as today from dual;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[4] 아래와 같이 3학년 5반의 출석부를 출력하는 쿼리를 작성하시오.(학번을 이용하여 학년, 반, 번호 추출.)

select substr(st_no, 1, 1) grade, substr(st_no, 3, 1) class, substr(st_no, 5) num, st_major as major, st_nm as name,  null as presence from student_tbl_004;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5] 아래와 같이 학생별 전공성적을 출력하는 쿼리를 작성하시오. (등급 : 평균점수가 90점이상 A, 80점이상 B, 70점이상 C, 60점이상 D, 그 외 F)

select a.st_no, a.st_nm, a.st_major, c.exam_point1, c.exam_point2, avg(c.exam_point1+c.exam_point2) / 2 as avg,
	case when (c.exam_point1+c.exam_point2) / 2 > = 90 then 'A'
	when avg(c.exam_point1+c.exam_point2) / 2 < 90 AND (c.exam_point1+c.exam_point2) / 2 >= 80 then 'B'
	when avg(c.exam_point1+c.exam_point2) / 2 < 80 AND avg(c.exam_point1+c.exam_point2) / 2 >= 70 then 'C'
	when avg(c.exam_point1+c.exam_point2) / 2 > 70 AND avg(c.exam_point1+c.exam_point2) / 2 >=60 then 'D'
	else 'F' end
	from student_tbl_004 a, exam_tbl_004 c where c.exam_st_no = a.st_no AND c.exam_sbj_cd = 'A001' group by a.st_no, a.st_nm, a.st_major, c.exam_point1, c.exam_point2 order by a.st_nm;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-1] 위 출력내용의 평균점수를 모두 반올림 처리하여 출력하시오.

select a.st_no, a.st_nm, a.st_major, c.exam_point1, round(c.exam_point2, avg(c.exam_point1+c.exam_point2) / 2) as ag,
	case when round((c.exam_point1+c.exam_point2) / 2) > = 90 then 'A'
	when round((c.exam_point1+c.exam_point2) / 2) < 90 AND round((c.exam_point1+c.exam_point2) / 2) >= 80 then 'B'
	when round((c.exam_point1+c.exam_point2) / 2) < 80 AND round((c.exam_point1+c.exam_point2) / 2) >= 70 then 'C'
	when round((c.exam_point1+c.exam_point2) / 2) > 70 AND round((c.exam_point1+c.exam_point2) / 2) >=60 then 'D'
	when round((c.exam_point1+c.exam_point2) / 2) < 60 then 'F' END as avg
	from student_tbl_004 a, exam_tbl_004 c where c.exam_st_no = a.st_no AND c.exam_sbj_cd = 'A001' group by a.st_no, a.st_nm, a.st_major, c.exam_point1, c.exam_point2 order by a.st_nm;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-2] 위 출력내용을 평균점수가 높은 학생순서로 정렬하시오

select a.st_no, a.st_nm, a.st_major, c.exam_point1, round(c.exam_point2, avg(c.exam_point1+c.exam_point2) / 2) as ag,
	case when round((c.exam_point1+c.exam_point2) / 2) > = 90 then 'A'
	when round((c.exam_point1+c.exam_point2) / 2) < 90 AND round((c.exam_point1+c.exam_point2) / 2) >= 80 then 'B'
	when round((c.exam_point1+c.exam_point2) / 2) < 80 AND round((c.exam_point1+c.exam_point2) / 2) >= 70 then 'C'
	when round((c.exam_point1+c.exam_point2) / 2) > 70 AND round((c.exam_point1+c.exam_point2) / 2) >=60 then 'D'
	when round((c.exam_point1+c.exam_point2) / 2) < 60 then 'F' END as avg
	from student_tbl_004 a, exam_tbl_004 c where c.exam_st_no = a.st_no AND c.exam_sbj_cd = 'A001' group by a.st_no, a.st_nm, a.st_major, c.exam_point1, c.exam_point2 order by avg;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-3] 전공성적의 등급이 B인 학생의 학번과 성명을 출력하시오.

select * from(
	select a.st_no, a.st_nm, 
	case when (c.exam_point1+c.exam_point2) / 2 >= 90 then 'A'
	when (c.exam_point1+c.exam_point2) / 2 < 90 and (c.exam_point1+c.exam_point2) / 2 >= 80 then 'B'
	when (c.exam_point1+c.exam_point2) / 2 < 80 and (c.exam_point1+c.exam_point2) / 2 >= 70 then 'C'
	when (c.exam_point1+c.exam_point2) / 2 < 70 and (c.exam_point1+c.exam_point2) / 2 >= 60 then 'D'
	when (c.exam_point1+c.exam_point2) / 2 < 60 then 'F' end as avg
	from student_tbl_004 a, exam_tbl_004 c where c.exam_st_no = a.st_no AND c.exam_sbj_cd = 'A001' group by a.st_no, a.st_nm, c.exam_point1, c.exam_point2 order by a.st_nm
	) where avg = 'B';

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-4] 전공성적이 우수한 상위 3명의 정보를 순서대로 출력하시오. // 수정하기

select rownum, st_no, st_nm, st_major, total from (
	select a.st_no, a.st_nm, a.st_major,
	(c.exam_point1+c.exam_point2) / 2 as total
	from student_tbl_004 a, exam_tbl_004 c where c.exam_st_no = a.st_no AND c.exam_sbj_cd = 'A001' order by total desc
	) where rownum <= 3;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-5] 전공성적과 비전공성적의 합산점수가 우수한 상위 3명의 정보를 순서대로 출력하시오

select rownum, st_no, st_nm, st_major, total, avg from (
	select a.st_no, a.st_nm, a.st_major, 
	sum(c.exam_point1+c.exam_point2) as total, sum(c.exam_point1+c.exam_point2) / 4 as avg 
	from student_tbl_004 a, exam_tbl_004 c where c.exam_st_no = a.st_no group by a.st_no, a.st_nm, a.st_major order by total desc
	) where rownum <= 3 order by rownum;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-6] 비전공과목의 필기평가 최소득점자와 실기평가 최소득점자를 아래와 같이 출력하시오.

SELECT max(name1)||'('||max(p1)||'점)', max(name2)||'('||max(p2)||'점)' FROM (
	SELECT a.st_nm AS name1, c.exam_point1 AS p1, '' name2, 0 p2
	FROM STUDENT_TBL_004 a, EXAM_TBL_004 c
	WHERE a.st_no = c.exam_st_no
	AND c.exam_sbj_cd LIKE 'B%'
	AND c.exam_point1 = (SELECT min(exam_point1) FROM EXAM_TBL_004 WHERE exam_sbj_cd LIKE 'B%')
	UNION ALL
	SELECT ''name1, 0 p1, a.st_nm AS name2, c.EXAM_POINT2 AS p2
	FROM STUDENT_TBL_004 a, EXAM_TBL_004 c
	WHERE a.st_no = c.EXAM_ST_NO
	AND c.EXAM_SBJ_CD LIKE 'B%'
	AND c.EXAM_POINT2 = (SELECT min(exam_point2) FROM EXAM_TBL_004 WHERE exam_sbj_cd LIKE 'B%')
);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-7] 송혜교(30506)의 HTML(A001)시험 성적을 50점에서 55점으로 수정하시오.

update exam_tbl_004 set exam_point1 = 55 where exam_st_no = '30506' and exam_sbj_cd = 'A001';

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-8] 김지원(30503)의 주소를 ‘서울시 송파구’에서 ‘서울시 서초구’로 수정하시오.

update student_tbl_004 set st_addr = '서울시 서초구' where st_no = '30503';

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-9] 학생정보(student_tbl_004)테이블에서 김병철(30502)을 삭제하시오. 

delete from exam_tbl_004 where exam_st_no = '30502';
delete from student_tbl_004 where st_nm = '김병철' AND st_no = '30502';

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-10] 학생정보(student_tbl_004))테이블의 모든 학생들의 졸업일자(st_out_date)를 오늘날짜로 수정하시오. (단, 졸업일자는 시분초를 제외한 연월일(20190412)만 입력하세요.)

update student_tbl_004 set st_out_date = to_char(sysdate, 'yyyyMMdd');

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[5-11] 학생정보(student_tbl_004)테이블에서 강신일(30501)학생을 삭제하시오.

delete from exam_tbl_004 where exam_st_no = '30501';
delete from student_tbl_004 where st_nm = '강신일' AND st_no = '30501';

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[6] 시험감독테이블(person_tbl_004))을 삭제하시오.

drop table person_tbl_004;
